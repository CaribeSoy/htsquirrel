/*
 The MIT License (MIT)

 Copyright (c) 2015 Aleksandar Cvetković

 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
 in the Software without restriction, including without limitation the rights
 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:

 The above copyright notice and this permission notice shall be included in all
 copies or substantial portions of the Software.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 SOFTWARE.
 */
package htsquirrel.gui.pages.matchfilter;

import static htsquirrel.HTSquirrel.getCurrentTeam;
import static htsquirrel.HTSquirrel.getLanguage;
import static htsquirrel.database.DatabaseManagement.createDatabaseConnection;
import htsquirrel.translations.Translations;
import java.io.IOException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JComboBox;
import javax.swing.JFormattedTextField;
import javax.swing.JRadioButton;
import javax.swing.border.EtchedBorder;

/**
 *
 * @author Aleksandar Cvetković <arcvetkovic@gmail.com>
 */
public class PeriodBase extends javax.swing.JPanel {

    /**
     * Creates new form PeriodBase
     */
    public PeriodBase() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupSeason = new javax.swing.ButtonGroup();
        buttonGroupLeague = new javax.swing.ButtonGroup();
        panelSeason = new javax.swing.JPanel();
        radioButtonSeason = new javax.swing.JRadioButton();
        labelFrom1 = new javax.swing.JLabel();
        comboBoxSeasonFrom = new javax.swing.JComboBox();
        labelTo1 = new javax.swing.JLabel();
        comboBoxSeasonTo = new javax.swing.JComboBox();
        radioButtonDate = new javax.swing.JRadioButton();
        labelFrom2 = new javax.swing.JLabel();
        textFieldDateFrom = new javax.swing.JFormattedTextField();
        labelTo2 = new javax.swing.JLabel();
        textFieldDateTo = new javax.swing.JFormattedTextField();
        panelLeague = new javax.swing.JPanel();
        radioButtonLeagueLevel = new javax.swing.JRadioButton();
        labelFrom3 = new javax.swing.JLabel();
        comboBoxLevelFrom = new javax.swing.JComboBox();
        labelTo3 = new javax.swing.JLabel();
        comboBoxLevelTo = new javax.swing.JComboBox();
        radioButtonSpecificLeague = new javax.swing.JRadioButton();
        labelLeagueName = new javax.swing.JLabel();
        comboBoxLeagueName = new javax.swing.JComboBox();

        setBorder(null);

        panelSeason.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Season and date"));

        buttonGroupSeason.add(radioButtonSeason);
        radioButtonSeason.setSelected(true);
        radioButtonSeason.setText("Season");

        labelFrom1.setText("From:");

        comboBoxSeasonFrom.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        labelTo1.setText("To:");

        comboBoxSeasonTo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        buttonGroupSeason.add(radioButtonDate);
        radioButtonDate.setText("Date");

        labelFrom2.setText("From:");

        textFieldDateFrom.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("yyyy-MM-dd"))));
        textFieldDateFrom.setText("2001-01-01");

        labelTo2.setText("To:");

        textFieldDateTo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("yyyy-MM-dd"))));
        textFieldDateTo.setText("2001-01-01");

        javax.swing.GroupLayout panelSeasonLayout = new javax.swing.GroupLayout(panelSeason);
        panelSeason.setLayout(panelSeasonLayout);
        panelSeasonLayout.setHorizontalGroup(
            panelSeasonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSeasonLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelSeasonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radioButtonSeason)
                    .addComponent(radioButtonDate)
                    .addGroup(panelSeasonLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(panelSeasonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelSeasonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(labelFrom2)
                                .addComponent(labelFrom1))
                            .addComponent(labelTo1)
                            .addComponent(labelTo2))
                        .addGap(18, 18, 18)
                        .addGroup(panelSeasonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(textFieldDateFrom, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                            .addComponent(comboBoxSeasonTo, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(comboBoxSeasonFrom, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(textFieldDateTo))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelSeasonLayout.setVerticalGroup(
            panelSeasonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSeasonLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(radioButtonSeason)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelSeasonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelFrom1)
                    .addComponent(comboBoxSeasonFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelSeasonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxSeasonTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelTo1))
                .addGap(18, 18, 18)
                .addComponent(radioButtonDate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelSeasonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelFrom2)
                    .addComponent(textFieldDateFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelSeasonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textFieldDateTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelTo2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelLeague.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "League"));

        buttonGroupLeague.add(radioButtonLeagueLevel);
        radioButtonLeagueLevel.setSelected(true);
        radioButtonLeagueLevel.setText("League level");

        labelFrom3.setText("From:");

        comboBoxLevelFrom.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        labelTo3.setText("To:");

        comboBoxLevelTo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        buttonGroupLeague.add(radioButtonSpecificLeague);
        radioButtonSpecificLeague.setText("Specific league");

        labelLeagueName.setText("League name:");

        comboBoxLeagueName.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout panelLeagueLayout = new javax.swing.GroupLayout(panelLeague);
        panelLeague.setLayout(panelLeagueLayout);
        panelLeagueLayout.setHorizontalGroup(
            panelLeagueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLeagueLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelLeagueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radioButtonLeagueLevel)
                    .addComponent(radioButtonSpecificLeague)
                    .addGroup(panelLeagueLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(panelLeagueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelLeagueLayout.createSequentialGroup()
                                .addComponent(labelLeagueName)
                                .addGap(18, 18, 18)
                                .addComponent(comboBoxLeagueName, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelLeagueLayout.createSequentialGroup()
                                .addGroup(panelLeagueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelFrom3)
                                    .addComponent(labelTo3))
                                .addGap(18, 18, 18)
                                .addGroup(panelLeagueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(comboBoxLevelFrom, 0, 90, Short.MAX_VALUE)
                                    .addComponent(comboBoxLevelTo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addContainerGap(121, Short.MAX_VALUE))
        );
        panelLeagueLayout.setVerticalGroup(
            panelLeagueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLeagueLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(radioButtonLeagueLevel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelLeagueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelFrom3)
                    .addComponent(comboBoxLevelFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelLeagueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxLevelTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelTo3))
                .addGap(18, 18, 18)
                .addComponent(radioButtonSpecificLeague)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelLeagueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelLeagueName)
                    .addComponent(comboBoxLeagueName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelSeason, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelLeague, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelSeason, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(panelLeague, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    public JComboBox getComboBoxLeagueName() {
        return comboBoxLeagueName;
    }

    public JComboBox getComboBoxLevelFrom() {
        return comboBoxLevelFrom;
    }

    public JComboBox getComboBoxLevelTo() {
        return comboBoxLevelTo;
    }

    public JComboBox getComboBoxSeasonFrom() {
        return comboBoxSeasonFrom;
    }

    public JComboBox getComboBoxSeasonTo() {
        return comboBoxSeasonTo;
    }

    public JRadioButton getRadioButtonDate() {
        return radioButtonDate;
    }

    public JRadioButton getRadioButtonLeagueLevel() {
        return radioButtonLeagueLevel;
    }

    public JRadioButton getRadioButtonSeason() {
        return radioButtonSeason;
    }

    public JRadioButton getRadioButtonSpecificLeague() {
        return radioButtonSpecificLeague;
    }

    public JFormattedTextField getTextFieldDateFrom() {
        return textFieldDateFrom;
    }

    public JFormattedTextField getTextFieldDateTo() {
        return textFieldDateTo;
    }

    public void resetPeriod() {
        radioButtonSeason.setSelected(true);
        radioButtonLeagueLevel.setSelected(true);
        comboBoxSeasonFrom.removeAllItems();
        comboBoxSeasonTo.removeAllItems();
        comboBoxLevelFrom.removeAllItems();
        comboBoxLevelTo.removeAllItems();
        comboBoxLeagueName.removeAllItems();
        try {
            Connection db = createDatabaseConnection();
            // season from and to
            String sqlCode = "SELECT SEASON FROM LEAGUES WHERE TEAM_ID = "
                    + getCurrentTeam().getTeamId();
            Statement statement1 = db.createStatement();
            ResultSet resultSet1 = statement1.executeQuery(sqlCode);
            while (resultSet1.next()) {
                int season = resultSet1.getInt("SEASON");
                comboBoxSeasonFrom.addItem(season);
                comboBoxSeasonTo.addItem(season);
            }
            comboBoxSeasonTo.setSelectedIndex(comboBoxSeasonTo.getItemCount() - 1);
            statement1.close();
            // specific league
            sqlCode = "SELECT LEAGUE_LEVEL_UNIT_NAME FROM (SELECT DISTINCT LEAGUE_LEVEL_UNIT_ID, LEAGUE_LEVEL_UNIT_NAME FROM LEAGUES  WHERE TEAM_ID = "
                    + getCurrentTeam().getTeamId() + " ORDER BY LEAGUE_LEVEL_UNIT_ID)";
            Statement statement2 = db.createStatement();
            ResultSet resultSet2 = statement2.executeQuery(sqlCode);
            while (resultSet2.next()) {
                String league = resultSet2.getString("LEAGUE_LEVEL_UNIT_NAME");
                comboBoxLeagueName.addItem(league);
            }
            statement2.close();
            // league level from and to
            sqlCode = "SELECT DISTINCT LEAGUE_LEVEL FROM LEAGUES WHERE TEAM_ID = "
                    + getCurrentTeam().getTeamId() + " ORDER BY LEAGUE_LEVEL";
            Statement statement3 = db.createStatement();
            ResultSet resultSet3 = statement3.executeQuery(sqlCode);
            while (resultSet3.next()) {
                int level = resultSet3.getInt("LEAGUE_LEVEL");
                comboBoxLevelFrom.addItem(level);
                comboBoxLevelTo.addItem(level);
            }
            comboBoxLevelTo.setSelectedIndex(comboBoxLevelTo.getItemCount() - 1);
            statement3.close();
            // date from and to
            sqlCode = "SELECT TO_CHAR(MIN(MATCH_DATE), 'YYYY-MM-DD') AS FIRST_DATE,  TO_CHAR(MAX(MATCH_DATE) + 1, 'YYYY-MM-DD') AS LAST_DATE FROM MATCHES WHERE TEAM_ID = "
                    + getCurrentTeam().getTeamId();
            Statement statement4 = db.createStatement();
            ResultSet resultSet4 = statement4.executeQuery(sqlCode);
            while (resultSet4.next()) {
                String firstDate = resultSet4.getString("FIRST_DATE");
                String lastDate = resultSet4.getString("LAST_DATE");
                textFieldDateFrom.setText(firstDate);
                textFieldDateTo.setText(lastDate);
            }
            statement4.close();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PeriodBase.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(PeriodBase.class.getName()).log(Level.SEVERE, null, ex);
        }
        Translations translations = new Translations();
        Properties properties = null;
        try {
            properties = translations.getTranslations(getLanguage());
            panelSeason.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(EtchedBorder.LOWERED), properties.getProperty("period_panel_season")));
            radioButtonSeason.setText(properties.getProperty("period_season"));
            radioButtonDate.setText(properties.getProperty("period_date"));
            labelFrom1.setText(properties.getProperty("from"));
            labelTo1.setText(properties.getProperty("to"));
            labelFrom2.setText(properties.getProperty("from"));
            labelTo2.setText(properties.getProperty("to"));
            panelLeague.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(EtchedBorder.LOWERED), properties.getProperty("period_panel_league")));
            radioButtonLeagueLevel.setText(properties.getProperty("period_league_level"));
            labelFrom3.setText(properties.getProperty("from"));
            labelTo3.setText(properties.getProperty("to"));
            radioButtonSpecificLeague.setText(properties.getProperty("period_league_specific"));
            labelLeagueName.setText(properties.getProperty("period_league_name"));
        } catch (IOException ex) {
            Logger.getLogger(PeriodBase.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupLeague;
    private javax.swing.ButtonGroup buttonGroupSeason;
    private javax.swing.JComboBox comboBoxLeagueName;
    private javax.swing.JComboBox comboBoxLevelFrom;
    private javax.swing.JComboBox comboBoxLevelTo;
    private javax.swing.JComboBox comboBoxSeasonFrom;
    private javax.swing.JComboBox comboBoxSeasonTo;
    private javax.swing.JLabel labelFrom1;
    private javax.swing.JLabel labelFrom2;
    private javax.swing.JLabel labelFrom3;
    private javax.swing.JLabel labelLeagueName;
    private javax.swing.JLabel labelTo1;
    private javax.swing.JLabel labelTo2;
    private javax.swing.JLabel labelTo3;
    private javax.swing.JPanel panelLeague;
    private javax.swing.JPanel panelSeason;
    private javax.swing.JRadioButton radioButtonDate;
    private javax.swing.JRadioButton radioButtonLeagueLevel;
    private javax.swing.JRadioButton radioButtonSeason;
    private javax.swing.JRadioButton radioButtonSpecificLeague;
    private javax.swing.JFormattedTextField textFieldDateFrom;
    private javax.swing.JFormattedTextField textFieldDateTo;
    // End of variables declaration//GEN-END:variables
}
