/*
 The MIT License (MIT)

 Copyright (c) 2015 Aleksandar CvetkoviÄ‡

 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
 in the Software without restriction, including without limitation the rights
 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:

 The above copyright notice and this permission notice shall be included in all
 copies or substantial portions of the Software.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 SOFTWARE.
 */
package htsquirrel.gui.pages.matchfilter;

import static htsquirrel.HTSquirrel.getLanguage;
import htsquirrel.translations.Translations;
import java.io.IOException;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JCheckBox;
import javax.swing.JSpinner;
import javax.swing.border.EtchedBorder;

/**
 *
 * @author aleksandar
 */
public class ArenaSeatType extends javax.swing.JPanel {

    /**
     * Creates new form ArenaSeatType
     */
    public ArenaSeatType() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelSeatType = new javax.swing.JPanel();
        checkBoxTerraces = new javax.swing.JCheckBox();
        labelFrom1 = new javax.swing.JLabel();
        spinnerTerracesFrom = new javax.swing.JSpinner();
        labelTo1 = new javax.swing.JLabel();
        spinnerTerracesTo = new javax.swing.JSpinner();
        checkBoxBasic = new javax.swing.JCheckBox();
        labelFrom2 = new javax.swing.JLabel();
        spinnerBasicFrom = new javax.swing.JSpinner();
        labelTo2 = new javax.swing.JLabel();
        spinnerBasicTo = new javax.swing.JSpinner();
        checkBoxRoof = new javax.swing.JCheckBox();
        labelFrom3 = new javax.swing.JLabel();
        spinnerRoofFrom = new javax.swing.JSpinner();
        labelTo3 = new javax.swing.JLabel();
        spinnerRoofTo = new javax.swing.JSpinner();
        checkBoxVip = new javax.swing.JCheckBox();
        labelFrom4 = new javax.swing.JLabel();
        spinnerVipFrom = new javax.swing.JSpinner();
        labelTo4 = new javax.swing.JLabel();
        spinnerVipTo = new javax.swing.JSpinner();

        panelSeatType.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Seat type"));

        checkBoxTerraces.setText("Terraces");

        labelFrom1.setText("From:");

        spinnerTerracesFrom.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1000)));

        labelTo1.setText("To:");

        spinnerTerracesTo.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1000)));

        checkBoxBasic.setText("Basic");

        labelFrom2.setText("From:");

        spinnerBasicFrom.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1000)));

        labelTo2.setText("To:");

        spinnerBasicTo.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1000)));

        checkBoxRoof.setText("Under roof");

        labelFrom3.setText("From:");

        spinnerRoofFrom.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1000)));

        labelTo3.setText("To:");

        spinnerRoofTo.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1000)));

        checkBoxVip.setText("VIP");

        labelFrom4.setText("From:");

        spinnerVipFrom.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1000)));

        labelTo4.setText("To:");

        spinnerVipTo.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1000)));

        javax.swing.GroupLayout panelSeatTypeLayout = new javax.swing.GroupLayout(panelSeatType);
        panelSeatType.setLayout(panelSeatTypeLayout);
        panelSeatTypeLayout.setHorizontalGroup(
            panelSeatTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSeatTypeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelSeatTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(checkBoxTerraces)
                    .addComponent(checkBoxBasic)
                    .addComponent(checkBoxRoof)
                    .addComponent(checkBoxVip)
                    .addGroup(panelSeatTypeLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(panelSeatTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panelSeatTypeLayout.createSequentialGroup()
                                .addComponent(labelFrom2)
                                .addGap(18, 18, 18)
                                .addComponent(spinnerBasicFrom))
                            .addGroup(panelSeatTypeLayout.createSequentialGroup()
                                .addComponent(labelFrom1)
                                .addGap(18, 18, 18)
                                .addComponent(spinnerTerracesFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelSeatTypeLayout.createSequentialGroup()
                                .addGroup(panelSeatTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(labelFrom4)
                                    .addComponent(labelFrom3))
                                .addGap(18, 18, 18)
                                .addGroup(panelSeatTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(spinnerVipFrom, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(spinnerRoofFrom))))
                        .addGap(18, 18, 18)
                        .addGroup(panelSeatTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panelSeatTypeLayout.createSequentialGroup()
                                .addComponent(labelTo1)
                                .addGap(18, 18, 18)
                                .addComponent(spinnerTerracesTo, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelSeatTypeLayout.createSequentialGroup()
                                .addComponent(labelTo2)
                                .addGap(18, 18, 18)
                                .addComponent(spinnerBasicTo))
                            .addGroup(panelSeatTypeLayout.createSequentialGroup()
                                .addComponent(labelTo3)
                                .addGap(18, 18, 18)
                                .addComponent(spinnerRoofTo))
                            .addGroup(panelSeatTypeLayout.createSequentialGroup()
                                .addComponent(labelTo4)
                                .addGap(18, 18, 18)
                                .addComponent(spinnerVipTo)))))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        panelSeatTypeLayout.setVerticalGroup(
            panelSeatTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSeatTypeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(checkBoxTerraces)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelSeatTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spinnerTerracesFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelFrom1)
                    .addComponent(labelTo1)
                    .addComponent(spinnerTerracesTo, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkBoxBasic)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelSeatTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spinnerBasicFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelFrom2)
                    .addComponent(labelTo2)
                    .addComponent(spinnerBasicTo, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkBoxRoof)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelSeatTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spinnerRoofFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelFrom3)
                    .addComponent(labelTo3)
                    .addComponent(spinnerRoofTo, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkBoxVip)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelSeatTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spinnerVipFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelFrom4)
                    .addComponent(labelTo4)
                    .addComponent(spinnerVipTo, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelSeatType, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelSeatType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    public JCheckBox getCheckBoxBasic() {
        return checkBoxBasic;
    }

    public JCheckBox getCheckBoxRoof() {
        return checkBoxRoof;
    }

    public JCheckBox getCheckBoxTerraces() {
        return checkBoxTerraces;
    }

    public JCheckBox getCheckBoxVip() {
        return checkBoxVip;
    }

    public JSpinner getSpinnerBasicFrom() {
        return spinnerBasicFrom;
    }

    public JSpinner getSpinnerBasicTo() {
        return spinnerBasicTo;
    }

    public JSpinner getSpinnerRoofFrom() {
        return spinnerRoofFrom;
    }

    public JSpinner getSpinnerRoofTo() {
        return spinnerRoofTo;
    }

    public JSpinner getSpinnerTerracesFrom() {
        return spinnerTerracesFrom;
    }

    public JSpinner getSpinnerTerracesTo() {
        return spinnerTerracesTo;
    }

    public JSpinner getSpinnerVipFrom() {
        return spinnerVipFrom;
    }

    public JSpinner getSpinnerVipTo() {
        return spinnerVipTo;
    }

    public void resetArenaSeatType() {
        checkBoxTerraces.setSelected(false);
        checkBoxBasic.setSelected(false);
        checkBoxRoof.setSelected(false);
        checkBoxVip.setSelected(false);
        spinnerTerracesFrom.setValue(0);
        spinnerTerracesTo.setValue(999000);
        spinnerBasicFrom.setValue(0);
        spinnerBasicTo.setValue(999000);
        spinnerRoofFrom.setValue(0);
        spinnerRoofTo.setValue(999000);
        spinnerVipFrom.setValue(0);
        spinnerVipTo.setValue(999000);
        Translations translations = new Translations();
        Properties properties = null;
        try {
            properties = translations.getTranslations(getLanguage());
            panelSeatType.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(EtchedBorder.LOWERED), properties.getProperty("arena_panel_seat_type")));
            checkBoxTerraces.setText(properties.getProperty("arena_terraces"));
            checkBoxBasic.setText(properties.getProperty("arena_basic"));
            checkBoxRoof.setText(properties.getProperty("arena_roof"));
            checkBoxVip.setText(properties.getProperty("arena_vip"));
            labelFrom1.setText(properties.getProperty("from"));
            labelTo1.setText(properties.getProperty("to"));
            labelFrom2.setText(properties.getProperty("from"));
            labelTo2.setText(properties.getProperty("to"));
            labelFrom3.setText(properties.getProperty("from"));
            labelTo3.setText(properties.getProperty("to"));
            labelFrom4.setText(properties.getProperty("from"));
            labelTo4.setText(properties.getProperty("to"));
        } catch (IOException ex) {
            Logger.getLogger(PeriodBase.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox checkBoxBasic;
    private javax.swing.JCheckBox checkBoxRoof;
    private javax.swing.JCheckBox checkBoxTerraces;
    private javax.swing.JCheckBox checkBoxVip;
    private javax.swing.JLabel labelFrom1;
    private javax.swing.JLabel labelFrom2;
    private javax.swing.JLabel labelFrom3;
    private javax.swing.JLabel labelFrom4;
    private javax.swing.JLabel labelTo1;
    private javax.swing.JLabel labelTo2;
    private javax.swing.JLabel labelTo3;
    private javax.swing.JLabel labelTo4;
    private javax.swing.JPanel panelSeatType;
    private javax.swing.JSpinner spinnerBasicFrom;
    private javax.swing.JSpinner spinnerBasicTo;
    private javax.swing.JSpinner spinnerRoofFrom;
    private javax.swing.JSpinner spinnerRoofTo;
    private javax.swing.JSpinner spinnerTerracesFrom;
    private javax.swing.JSpinner spinnerTerracesTo;
    private javax.swing.JSpinner spinnerVipFrom;
    private javax.swing.JSpinner spinnerVipTo;
    // End of variables declaration//GEN-END:variables
}
